// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Portfolio.DB;

namespace Portfolio.DB.Migrations
{
    [DbContext(typeof(PortfolioDbContext))]
    partial class PortfolioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Portfolio.DB.Models.CV", b =>
                {
                    b.Property<string>("SID")
                        .HasColumnType("text");

                    b.Property<byte[]>("File")
                        .HasColumnType("bytea");

                    b.Property<double>("Version")
                        .HasColumnType("double precision");

                    b.HasKey("SID");

                    b.ToTable("CVs");
                });

            modelBuilder.Entity("Portfolio.DB.Models.Picture", b =>
                {
                    b.Property<string>("Sid")
                        .HasColumnType("text");

                    b.Property<byte[]>("Data")
                        .HasColumnType("bytea");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Sid");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("Portfolio.DB.Models.PortfolioPicture", b =>
                {
                    b.Property<string>("Sid")
                        .HasColumnType("text");

                    b.Property<byte[]>("Data")
                        .HasColumnType("bytea");

                    b.Property<bool>("IsMainPicture")
                        .HasColumnType("boolean");

                    b.Property<string>("ProjectId")
                        .HasColumnType("text");

                    b.HasKey("Sid");

                    b.HasIndex("ProjectId");

                    b.ToTable("PortfolioPictures");
                });

            modelBuilder.Entity("Portfolio.DB.Models.PortfolioProject", b =>
                {
                    b.Property<string>("Sid")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("GHLink")
                        .HasColumnType("text");

                    b.Property<bool>("HasGHLink")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Sid");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Portfolio.DB.Models.User", b =>
                {
                    b.Property<string>("Sid")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("ProfilePic")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Sid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Portfolio.DB.Models.PortfolioPicture", b =>
                {
                    b.HasOne("Portfolio.DB.Models.PortfolioProject", null)
                        .WithMany("Pictures")
                        .HasForeignKey("ProjectId");
                });
#pragma warning restore 612, 618
        }
    }
}
